C51 COMPILER V9.54   RX5808                                                                06/02/2020 14:38:57 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE RX5808
OBJECT MODULE PLACED IN .\Objects\rx5808.obj
COMPILER INVOKED BY: D:\Keil_MDK\C51\BIN\C51.EXE rx5808.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\r
                    -x5808.lst) TABS(2) OBJECT(.\Objects\rx5808.obj)

line level    source

   1          #include "all.h"
   2          /*
   3          Project:RX5808图传自动对频
   4          Made By:秃秃的科技宅
   5          首发于 ：bilibili
   6          
   7          我们的口号是：开源万岁
   8          
   9          Note：此代码完全开源，如有大佬拿去完善，请一定把完善过的代码开源！！！
  10          
  11          2020.05.16
  12          */
  13          
  14          
  15          /*
  16          数据帧格式：
  17                4位   寄存器地址
  18                1位   允许读写控制
  19                20位  数据
  20                
  21          20位数据格式：
  22                7位   A
  23                13位  N
  24                
  25          A和N的计算公式：
  26                F_rf-479=F_lo=2*(N*32+A)*(F_osc/R)
  27                其中：F_osc=8Mhz  R=8
  28          
  29          先发低位！！！！！！！！！！！！！！！！！！
  30          
  31          硬件改动：需去掉一个电阻，否则将无法使用
  32          
  33          可以去百度查看RX5808具体介绍，百度文库网址：
  34          https://wenku.baidu.com/view/40e85b9e6037ee06eff9aef8941ea76e59fa4a6e.html
  35          */
  36          
  37          #define Synthesizer_Register_B        0x01  //频率设置寄存器
  38          #define Power_Down_Control_Register   0x0a  //电源控制寄存器
  39          #define State_Register                0x0f  //状态控制寄存器
  40          
  41          u16 code Freq_Buff[48]=
  42          {
  43            5865,5845,5825,5805,5785,5765,5745,5725,    //A CH1-8
  44            5733,5752,5771,5790,5809,5828,5847,5866,    //B CH1-8
  45            5705,5685,5665,5645,5885,5905,5925,5945,    //C CH1-8
  46            5740,5760,5780,5800,5820,5840,5860,5880,    //D CH1-8
  47            5658,5695,5732,5769,5806,5843,5880,5917,    //E CH1-8
  48            5362,5399,5436,5473,5510,5547,5584,5621,    //F CH1-8
  49          };
  50          
  51          u8 channel=0;
  52          
  53          //spi发送一位数据
  54          void SPI_Send_Bit(bit Value)
C51 COMPILER V9.54   RX5808                                                                06/02/2020 14:38:57 PAGE 2   

  55          {
  56   1        SCK =0;
  57   1        _nop_();
  58   1        MOSI=Value;
  59   1        _nop_();
  60   1        SCK =1;
  61   1        _nop_();
  62   1      }
  63          
  64          //spi发送长度为len位数据
  65          //根据时序图，要求先发送数据低位
  66          void SPI_Send_Bits(u32 Value,u8 len)
  67          {
  68   1        u8 i;
  69   1        for(i=0;i<len;i++)
  70   1        {
  71   2          SPI_Send_Bit((bit)(Value&0x01));
  72   2          Value>>=1;
  73   2        }
  74   1      }
  75          
  76          void Send_Register_Data(u8 addr,u32 Dat)   //向地址为addr寄存器发送数据
  77          {
  78   1        LE=0;                   //相当于CS，低电平选中芯片，允许传输数据
  79   1        SPI_Send_Bits(addr,4);  //先发送寄存器4位地址
  80   1        SPI_Send_Bit(1);        //允许写入
  81   1        SPI_Send_Bits(Dat,20);  //发送20位控制数据
  82   1        
  83   1        //一帧数据传输完成
  84   1        LE=1;
  85   1        SCK=0;
  86   1        MOSI=0;
  87   1      }
  88          
  89          void RX5808_Set_Freq(u16 F_rf)   //RX5808设置一个频率
  90          {
  91   1        u32 dat;
  92   1        u16 F_lo=(F_rf-479)/2;
  93   1        u16 SYN_RF_N;
  94   1        u16 SYN_RF_A;
  95   1        
  96   1        SYN_RF_N=F_lo/32;    //计算此频率下N值
  97   1        SYN_RF_A=F_lo%32;    //计算此频率下A值
  98   1        
  99   1        dat=SYN_RF_N;
 100   1        dat<<=7;
 101   1        dat|=SYN_RF_A;       //得到20位控制数据
 102   1        
 103   1        //设置频率控制寄存器
 104   1        Send_Register_Data(Synthesizer_Register_B,dat);
 105   1      }
 106          
 107          void Channel_Scan()  //自动搜频
 108          {
 109   1        u8 i;
 110   1        u8 sig;
 111   1        u8 sig_max=0;
 112   1        
 113   1        ADC_Translate();
 114   1        
 115   1        for(i=0;i<48;i++)
 116   1        {
C51 COMPILER V9.54   RX5808                                                                06/02/2020 14:38:57 PAGE 3   

 117   2          RX5808_Set_Freq(Freq_Buff[i]);
 118   2          delay_ms(15);
 119   2          sig=ADC_Translate();
 120   2      //    Uart_Up_CH_Sig(i,sig);
 121   2          
 122   2          if(sig>sig_max)sig_max=sig,channel=i;
 123   2        }
 124   1        
 125   1      //  Uart_Up_Buf("\r\n");
 126   1      //  Uart_Up_Buf("The final channel is :  ");
 127   1      //  Uart_Up_CH_Sig(channel,sig_max);
 128   1        
 129   1        EEPROM_Eares(0);
 130   1        EEPROM_Write(0,channel);      //频率数值存入eeprom
 131   1        RX5808_Set_Freq(Freq_Buff[channel]);    //设置频率
 132   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    299    ----
   CONSTANT SIZE    =     96    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
